[
  {
    "objectID": "ST558MW4MBeebe.html#question-1",
    "href": "ST558MW4MBeebe.html#question-1",
    "title": "ST558 Homework 4",
    "section": "Question 1",
    "text": "Question 1\n\nWrite a function for RMSE\nThe goal of this section is to write a function that will take in two vectors and return Root Mean Square Error (RMSE). An ellipsis will be included in the function to allow for additional arguments. The function will be created one or two steps at a time so it can be checked for errors and calculations verified.\nThe step is to calculate the difference between the response and predicted response, followed by squaring this difference. We can use map2() since we have two vectors as inputs. However, map2() alone will return a list which can cause problems in subsequent steps, so map2_dbl() should be use to return a vector. An anonymous function using x and y is use to calculate the difference between corresponding elements in each vector.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n#create vectors for testing\nresponse_vec &lt;- c(10, 20)\nprediction_vec &lt;- c(12, 21)\ngetRMSE &lt;- function(vector1, vector2, ...) {\n  result &lt;- map2_dbl(vector1, vector2, \\(x, y) x-y)\n  return(result)\n}\ngetRMSE(response_vec, prediction_vec)\n\n[1] -2 -1\n\n\nThe next step is to take the square of the difference for each element in the vector returned from the above function. This step can be accomplished easily with map(). Alternatively, this step could have been performed along with the calculation of differences as one anonymous function, but I chose to keep them separate to verify my code. The function up to this point with the squared differences added is presented below.\n\ngetRMSE &lt;- function(vector1, vector2, ...) {\n  result &lt;- map2_dbl(vector1, vector2, \\(x, y) x-y) |&gt;\n    map_dbl(\\(x) x^2)\n  return(result)\n}\nsquared_differences &lt;- getRMSE(response_vec, prediction_vec)\nsquared_differences\n\n[1] 4 1\n\n\nThe next step is to sum up our squared differences and divide by n, which can be performed using mean(). The next step of taking the square root will also be added using map_dbl(). These steps are also being combined with the previous steps to result in the final function for calculating RMSE.\n\ngetRMSE &lt;- function(vector1, vector2, ...) {\n  result &lt;- map2_dbl(vector1, vector2, \\(x, y) x-y) |&gt;\n    map_dbl(\\(x) x^2) |&gt;\n    mean(...) |&gt;\n    map_dbl(\\(x) sqrt(x))\n  return(result)\n}\ngetRMSE(response_vec, prediction_vec)\n\n[1] 1.581139"
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-2",
    "href": "ST558MW4MBeebe.html#question-2",
    "title": "ST558 Homework 4",
    "section": "Question 2",
    "text": "Question 2\n\nCreate response and prediction values\nThe code for getting a vector for responses and predictions was provide in the homework and is performed below.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\n\nTest RMSE function\nTo test the RMSE function, all we need to do is call the getRMSE() function and enter the vectors resp and pred as arguments.\n\ngetRMSE(resp, pred)\n\n[1] 0.9581677\n\n\n\n\nRepeat with missing values\nNow we want to replace two values in the response vector with NA_real_ and run getRMSE with and without specifying missing value behavior in the function. Two values can be replaced by specifying an index. I’ll choose 1:2 so it is easy to view the replacement.\n\nresp[c(1:2)] &lt;- NA_real_\nhead(resp)\n\n[1]        NA        NA  8.637031 12.068788  4.357179  6.040709\n\n\n\n\nRMSE function without specifying missing values behavior\n\ngetRMSE(resp, pred)\n\n[1] NA\n\n\n\n\nRMSE function specifying to ignore missing values\nThe argument na.rm=TRUE is used when the function is called to tell R to ignore missing values and calculate the mean of the numeric elements.\n\ngetRMSE(resp, pred, na.rm = TRUE)\n\n[1] 0.9661699"
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-3",
    "href": "ST558MW4MBeebe.html#question-3",
    "title": "ST558 Homework 4",
    "section": "Question 3",
    "text": "Question 3\n\nWrite a function for MAE\nThe function for MAE will be similar the one for RMSE. In fact, modifying the RMSE function is the simplest way to go. The difference calculation from RMSE can be modified to take the absolute of the difference. The final step is to sum up the values and divide by n, which is a mean.\n\ngetMAE &lt;- function(vector1, vector2, ...) {\n  result &lt;- map2_dbl(vector1, vector2, \\(x, y) abs(x-y)) |&gt;\n    mean(...)\n  return(result)\n}"
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-4",
    "href": "ST558MW4MBeebe.html#question-4",
    "title": "ST558 Homework 4",
    "section": "Question 4",
    "text": "Question 4\n\nCreate response values and predictions\nThis code is the same as for question 2 but it is rerun to overwrite the NA values created previously.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\n\nTest MAE function\n\ngetMAE(resp, pred)\n\n[1] 0.8155776\n\n\n\n\nRepeat MAE function with missing values\nMissing values are added as described before.\n\nresp[c(1:2)] &lt;- NA_real_\nhead(resp)\n\n[1]        NA        NA  8.637031 12.068788  4.357179  6.040709\n\n\n\n\nTest MAE with no arguments regarding missing values (defaults)\n\ngetMAE(resp, pred)\n\n[1] NA\n\n\n\n\nTest MAE specifying missing values to be ignored\n\ngetMAE(resp, pred, na.rm =TRUE)\n\n[1] 0.8241201"
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-5",
    "href": "ST558MW4MBeebe.html#question-5",
    "title": "ST558 Homework 4",
    "section": "Question 5",
    "text": "Question 5\n\nCreate wrapper function incorporating getRMSE and getMAE\nTo generate a wrapper function that can return both RMSE and MAE or one of the two, we can add an argument called “metrics” that consists of RMSE and MAE as the default. This will result in the return of both calculations as a list. The first requirement for this wrapper function is to check that the input data are numeric vectors. To do so, we can incorporate checks using is.vector( ), is.atomic) and is.numeric(). If the data inputs do not match one or more of these requirements, the function will abort and return that the vector “is not an atomic numeric vector”. To allow the user to specify what calculations they want, we can use a series of if else statements. The first statement is for the default, specifying RMSE and MAE as both being in “metrics”. To return the proper result, it must be one object, so list() is used to return a list containing both RMSE and MAE. The next two if else statements specify what should be returned if RMSE or MAE are specified as a metrics argument when the function is called.\n\nRMSE_MAE_wrapper &lt;- function(vector1, vector2, metrics = c(\"RMSE\", \"MAE\"), ...) {\n  if(!is.vector(vector1) || !is.atomic(vector1) || !is.numeric(vector1)) {\n    stop(\"vector1 is not an atomic numeric vector\")\n  }\n  if(!is.vector(vector2) || !is.atomic(vector2) || !is.numeric(vector2)) {\n    stop(\"vector2 is not an atomic numeric vector\")\n  }\n  \n  if(\"RMSE\" %in% metrics & \"MAE\" %in% metrics) {\n    result &lt;- list(RMSE = getRMSE(vector1, vector2, ...), \n                   MAE = getMAE(vector1, vector2, ...))\n  } else if(\"RMSE\" %in% metrics) {\n    result &lt;- getRMSE(vector1, vector2, ...)\n    } else if(\"MAE\" %in% metrics) { \n      result &lt;- getMAE(vector1, vector2, ...) \n  }\n  return(result)\n}"
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-6",
    "href": "ST558MW4MBeebe.html#question-6",
    "title": "ST558 Homework 4",
    "section": "Question 6",
    "text": "Question 6\n\nCreate response and prediction values\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\n\nTest wrapper function specifying RMSE\nHere, we specify RMSE in the metrics argument so that only the calculation for RMSE is returned.\n\nRMSE_MAE_wrapper(resp, pred, metrics = \"RMSE\")\n\n[1] 0.9581677\n\n\n\n\nTest wrapper function specifying MAE\nHere, we specify MAE in the metrics argument so that only the calculation for MAE is returned.\n\nRMSE_MAE_wrapper(resp, pred, metrics = \"MAE\")\n\n[1] 0.8155776\n\n\n\n\nTest wrapper function using defaults\nHere, we specify nothing for the metrics argument so that the default list containing both RMSE and MAE are in the output.\n\nRMSE_MAE_wrapper(resp, pred)\n\n$RMSE\n[1] 0.9581677\n\n$MAE\n[1] 0.8155776\n\n\n\n\nRepeat wrapper test with missing values\nThe next steps of generating a new response vector with NA for two values is the same as done previously.\n\nresp[c(1:2)] &lt;- NA_real_\nhead(resp)\n\n[1]        NA        NA  8.637031 12.068788  4.357179  6.040709\n\n\nNext, each of the call variations will be executed.\n\n\nWrapper with missing values and specifying RMSE\n\nRMSE_MAE_wrapper(resp, pred, metrics = \"RMSE\")\n\n[1] NA\n\n\n\n\nWrapper specifying to ignore missing values and calculate RMSE\n\nRMSE_MAE_wrapper(resp, pred, metrics = \"RMSE\", na.rm = TRUE)\n\n[1] 0.9661699\n\n\n\n\nWrapper with missing values and specifying MAE\n\nRMSE_MAE_wrapper(resp, pred, metrics = \"MAE\")\n\n[1] NA\n\n\n\n\nWrapper specifying to ignore missing values and calculate MAE\n\nRMSE_MAE_wrapper(resp, pred, metrics = \"MAE\", na.rm = TRUE)\n\n[1] 0.8241201\n\n\n\n\nWrapper with missing values using default metrics\n\nRMSE_MAE_wrapper(resp, pred)\n\n$RMSE\n[1] NA\n\n$MAE\n[1] NA\n\n\n\n\nWrapper specifying to ignore missing values and using default metrics\n\nRMSE_MAE_wrapper(resp, pred, na.rm = TRUE)\n\n$RMSE\n[1] 0.9661699\n\n$MAE\n[1] 0.8241201\n\n\n\n\nTest wrapper function with the wrong data type\nTo see what happens when an incorrect data type is used for one or more of the input arguments, I used the iris data, which is a data frame.\n\nRMSE_MAE_wrapper(iris, pred)\n\nError in RMSE_MAE_wrapper(iris, pred): vector1 is not an atomic numeric vector"
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-1-1",
    "href": "ST558MW4MBeebe.html#question-1-1",
    "title": "ST558 Homework 4",
    "section": "Question 1",
    "text": "Question 1\nThe following code uses GET() to obtain information about AlphaFold. For creating the URL, I followed guidelines from newsapi.org, using q=AlphaFold, a date of from=2024-05-28 and, following the advice of a classmate, referenced a file for my API key to keep it secure. The paste0() function, which concatenates multiple strings into one string, was used to construct the URL for the query. The structure for GET(url_id) reveals that the raw data is in “content”.\n\nlibrary(httr)\nlibrary(jsonlite)\n\n\nAttaching package: 'jsonlite'\n\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\nsource(\"api_key.R\")\nurl_id &lt;- paste0(\"https://newsapi.org/v2/everything?q=AlphaFold&from=2024-05-28&sortBy=popularity&apiKey=\", api_key)\nid_info &lt;- GET(url_id)\nstr(id_info, max.level = 1)\n\nList of 10\n $ url        : chr \"https://newsapi.org/v2/everything?q=AlphaFold&from=2024-05-28&sortBy=popularity&apiKey=2bdcb2ebb22946c2b9407c4ec5ceab21\"\n $ status_code: int 200\n $ headers    :List of 14\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    0 obs. of  7 variables:\n $ content    : raw [1:72684] 7b 22 73 74 ...\n $ date       : POSIXct[1:1], format: \"2024-06-26 02:39:53\"\n $ times      : Named num [1:6] 0 0.0274 0.0434 0.1165 0.4871 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\""
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-2-1",
    "href": "ST558MW4MBeebe.html#question-2-1",
    "title": "ST558 Homework 4",
    "section": "Question 2",
    "text": "Question 2\nThe raw data will be parsed by accessing content with $content and selecting “articles” from the list, which is where the data frame resides, and converting this to a tibble. The resulting tibble has a source column that contains &lt;data.frame [66 x 2]&gt;. This data frame consists of the source id and name. We want to convert this to a list column. We can modify this using mutate() to replace the source column and convert to a list using apply() with a margin of 1 (for row).\n\nparsed &lt;- fromJSON(rawToChar(id_info$content))\nstr(parsed)\n\nList of 3\n $ status      : chr \"ok\"\n $ totalResults: int 77\n $ articles    :'data.frame':   77 obs. of  8 variables:\n  ..$ source     :'data.frame': 77 obs. of  2 variables:\n  .. ..$ id  : chr [1:77] NA NA NA NA ...\n  .. ..$ name: chr [1:77] \"Substack.com\" \"Journal du geek\" \"Phys.Org\" \"Phys.Org\" ...\n  ..$ author     : chr [1:77] \"Oleg Trott\" \"Antoine Gautherie\" \"Science X\" \"Marc Zimmer\" ...\n  ..$ title      : chr [1:77] \"Are AlphaFold's new results a miracle?\" \"La plupart des gens se fiche royalement de ChatGPT, selon une étude\" \"Reimagining the undergraduate bio lab experience, and keeping students in STEMM\" \"AI plus gene editing promises to shift biotech into high gear\" ...\n  ..$ description: chr [1:77] \"So this happened: DeepMind (with 48 authors, including a new member of the British nobility) decided to compete\"| __truncated__ \"L'IA générative est devenue la nouvelle coqueluche de la Big Tech en l'espace de quelques mois, mais le public \"| __truncated__ \"HHMI's Science Education Alliance is transforming the undergraduate introductory science experience at more tha\"| __truncated__ \"During her chemistry Nobel Prize lecture in 2018, Frances Arnold said, \\\"Today we can for all practical purpose\"| __truncated__ ...\n  ..$ url        : chr [1:77] \"https://olegtrott.substack.com/p/are-alphafolds-new-results-a-miracle\" \"https://www.journaldugeek.com/2024/05/30/la-plupart-des-gens-se-fiche-royalement-de-chatgpt-selon-une-etude/\" \"https://phys.org/news/2024-06-reimagining-undergraduate-bio-lab-students.html\" \"https://phys.org/news/2024-06-ai-gene-shift-biotech-high.html\" ...\n  ..$ urlToImage : chr [1:77] \"https://substackcdn.com/image/fetch/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto/https%3A%\"| __truncated__ \"https://www.journaldugeek.com/app/uploads/2024/05/ia-smartphone.jpg\" \"https://scx2.b-cdn.net/gfx/news/hires/2024/reimagining-the-underg.jpg\" \"https://scx2.b-cdn.net/gfx/news/hires/2023/gene-editing-1.jpg\" ...\n  ..$ publishedAt: chr [1:77] \"2024-06-24T15:42:32Z\" \"2024-05-30T06:12:14Z\" \"2024-06-07T16:56:01Z\" \"2024-06-06T17:40:01Z\" ...\n  ..$ content    : chr [1:77] \"So this happened: DeepMind (with 48 authors, including a new member of the British nobility) decided to compete\"| __truncated__ \"Aujourdhui, tout le monde de la tech na plus que deux mots à la bouche : intelligence artificielle. Il ne se pa\"| __truncated__ \"This article has been reviewed according to Science X's \\r\\neditorial process\\r\\nand policies.\\r\\nEditors have \"| __truncated__ \"This article has been reviewed according to Science X's \\r\\neditorial process\\r\\nand policies.\\r\\nEditors have \"| __truncated__ ...\n\nalphafold_info &lt;- as_tibble(parsed$articles) \nalphafold_info\n\n# A tibble: 77 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Subs… Oleg … \"Are… \"So this h… http… https://s… 2024-06-24… \"So th…\n 2 &lt;NA&gt;      Jour… Antoi… \"La … \"L'IA géné… http… https://w… 2024-05-30… \"Aujou…\n 3 &lt;NA&gt;      Phys… Scien… \"Rei… \"HHMI's Sc… http… https://s… 2024-06-07… \"This …\n 4 &lt;NA&gt;      Phys… Marc … \"AI … \"During he… http… https://s… 2024-06-06… \"This …\n 5 &lt;NA&gt;      Phys… Kathe… \"Key… \"The lengt… http… https://s… 2024-06-05… \"This …\n 6 &lt;NA&gt;      Nati… Danie… \"Alp… \"Vivimos e… http… https://c… 2024-06-12… \"Vivim…\n 7 &lt;NA&gt;      Tinh… no-re… \"Bên… \"Phòng lab… http… https://s… 2024-06-21… \"iu qu…\n 8 &lt;NA&gt;      Inte… Inter…  &lt;NA&gt; \"Biologia … http… https://m… 2024-06-20… \"Biolo…\n 9 &lt;NA&gt;      Cour… &lt;NA&gt;   \"L’I… \"Après avo… http… https://f… 2024-06-14… \"Avec …\n10 &lt;NA&gt;      Tech… Alain… \" Ce… \"DeepMind … http… https://s… 2024-05-29… \"DeepM…\n# ℹ 67 more rows\n\nalphafold_info |&gt;\n  mutate(source = apply(source, MARGIN = 1, as.list))\n\n# A tibble: 77 × 8\n   source       author    title description url   urlToImage publishedAt content\n   &lt;named list&gt; &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;named list&gt; Oleg Tro… \"Are… \"So this h… http… https://s… 2024-06-24… \"So th…\n 2 &lt;named list&gt; Antoine … \"La … \"L'IA géné… http… https://w… 2024-05-30… \"Aujou…\n 3 &lt;named list&gt; Science X \"Rei… \"HHMI's Sc… http… https://s… 2024-06-07… \"This …\n 4 &lt;named list&gt; Marc Zim… \"AI … \"During he… http… https://s… 2024-06-06… \"This …\n 5 &lt;named list&gt; Katherin… \"Key… \"The lengt… http… https://s… 2024-06-05… \"This …\n 6 &lt;named list&gt; Daniel P… \"Alp… \"Vivimos e… http… https://c… 2024-06-12… \"Vivim…\n 7 &lt;named list&gt; no-reply… \"Bên… \"Phòng lab… http… https://s… 2024-06-21… \"iu qu…\n 8 &lt;named list&gt; Internaz…  &lt;NA&gt; \"Biologia … http… https://m… 2024-06-20… \"Biolo…\n 9 &lt;named list&gt; &lt;NA&gt;      \"L’I… \"Après avo… http… https://f… 2024-06-14… \"Avec …\n10 &lt;named list&gt; Alain RE… \" Ce… \"DeepMind … http… https://s… 2024-05-29… \"DeepM…\n# ℹ 67 more rows"
  },
  {
    "objectID": "ST558MW4MBeebe.html#question-3-1",
    "href": "ST558MW4MBeebe.html#question-3-1",
    "title": "ST558 Homework 4",
    "section": "Question 3",
    "text": "Question 3\nThe goal here is to write a function that can query newsapi.org. The function will take in arguments “subject”, for the topic of interest and “start_date” for the “&from” portion of the URL which specifies the date from which to start the search. There is also an “api_key” argument, but the function is designed with the intent that the user stores their key in a file called api_key.R for security purposes, so “api_key” will always used for this argument. The URL is constructed based on the user’s input arguments using paste0(). If we had wanted to hardcode the API key, the function would be the same but the source(“api_key.R) line would be removed from the function code and the user would replace the api_key argument with their own API key when they call the function. The rest of the code is the same as above. One caveat with the date is that the user may not specify the correct format for date, so code could be added to the function to account for this (I couldn’t figure this out) or a comment can be added within the function to specify the date format. Another potential issue is if someone wants to enter a subject with two words. For the function to work properly, the URL needs to be constructed so that a space in the form of”%20” is added between the words. A Google search turned up the function gsub(), so that is incorporated into the function to allow for a subject argument with more than one word. This function takes in the pattern, replacement and x (subject in our case). The complete function is presented below and was tested on the AlphaFold query. Returned results were the same as obtained previously.\n\napi_query &lt;- function(subject, start_date = \"2024-01-25\", api_key) {\n  #subject: topic to search for\n  #start_date: starting date for news search in \"YYYY-MM-DD\" format\n  #api-key: API key for accessing API at newsapi.org, stored securely \n  #in a api.key.R file\n  subject &lt;- gsub(\" \", \"%20\", subject)\n  source(\"api_key.R\")\n  url_id &lt;- paste0(\"https://newsapi.org/v2/everything?q=\", subject,\n                   \"&from=\", start_date, \"&sortBy=popularity&apiKey=\", api_key)\n  id_info &lt;- GET(url_id)\n  parsed &lt;- fromJSON(rawToChar(id_info$content))\n  result &lt;- as_tibble(parsed$articles) |&gt;\n    mutate(source = apply(source, MARGIN = 1, as.list))\n  return(result)\n}\n#test\n#api_query(\"AlphaFold\", \"2024-05-28\", api_key)\n\n\nRun API function two times\nThe API function will first be tested by searching for Altera, which is start-up company working on AI that can play video games with real players.\n\napi_query(\"Altera\", \"2024-05-26\", api_key)\n\n# A tibble: 100 × 8\n   source       author    title description url   urlToImage publishedAt content\n   &lt;named list&gt; &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;named list&gt; Maya Pos… \"Fix… \"One excit… http… https://h… 2024-06-10… \"Using…\n 2 &lt;named list&gt; Azucena … \"Est… \"El enjuag… http… https://i… 2024-06-05… \"El en…\n 3 &lt;named list&gt; Pablo Ma… \"En … \"La tecnol… http… https://i… 2024-06-05… \"La te…\n 4 &lt;named list&gt; Matías S… \"El … \"Desde que… http… https://i… 2024-06-17… \"Desde…\n 5 &lt;named list&gt; Javier M… \"Rus… \"En febrer… http… https://i… 2024-06-05… \"En fe…\n 6 &lt;named list&gt; Carlos P… \"He … \"— ¿Qué ho… http… https://i… 2024-06-16… \"¿Qué …\n 7 &lt;named list&gt; &lt;NA&gt;      \"Fix… \"Comments\"  http… &lt;NA&gt;       2024-06-09… \"What …\n 8 &lt;named list&gt; Pablo Mo… \"¿Ti… \"La socied… http… https://i… 2024-05-28… \"Estás…\n 9 &lt;named list&gt; Sarah Ro… \"¿Cu… \"La Tierra… http… https://i… 2024-06-05… \"Un eq…\n10 &lt;named list&gt; Iván Gon… \"\\\"S… \"Aunque la… http… https://i… 2024-06-12… \"Aunqu…\n# ℹ 90 more rows\n\n\nNext, the API function will be tested on “behavioral nudge”, inspired by an article in The Wall Street Journal about nudging people in the right direction for better decision making.\n\napi_query(\"behavioral nudge\", \"2024-05-26\", api_key)\n\n# A tibble: 16 × 8\n   source       author    title description url   urlToImage publishedAt content\n   &lt;named list&gt; &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;named list&gt; Justin W… Cons… \"A new sur… http… https://a… 2024-06-07… \"One o…\n 2 &lt;named list&gt; Ben Math… Poli… \"New, surp… http… https://c… 2024-06-20… \"In la…\n 3 &lt;named list&gt; 26258821… Hope… \"Dave Snow… http… https://g… 2024-06-21… \"This …\n 4 &lt;named list&gt; Sarang S… AI H… \"AI Househ… http… https://w… 2024-06-03… \"Of al…\n 5 &lt;named list&gt; Katherin… Lovi… \"Recovery … http… https://c… 2024-06-19… \"This …\n 6 &lt;named list&gt; Evan Pol… The … \"The benef… http… https://s… 2024-05-26… \"Behav…\n 7 &lt;named list&gt; Elizabet… Gove… \"The obsta… http… https://d… 2024-06-11… \"Is th…\n 8 &lt;named list&gt; Jenna Ab… Goog… \"In 2021, … http… https://i… 2024-05-31… \"In 20…\n 9 &lt;named list&gt; &lt;NA&gt;      Comm… \"html {\\n … http… &lt;NA&gt;       2024-05-26… \"This …\n10 &lt;named list&gt; Transfor… Leve… \"Integrati… http… &lt;NA&gt;       2024-06-02… \"\\\"The…\n11 &lt;named list&gt; communit… Do Y… \"Editor's … http… https://m… 2024-06-03… \"Merco…\n12 &lt;named list&gt; Nicole C… My H… \"He compla… http… https://c… 2024-06-13… \"Care …\n13 &lt;named list&gt; Sara Hea… What… \"Behaviora… http… https://c… 2024-05-30… \"Why d…\n14 &lt;named list&gt; &lt;NA&gt;      [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n15 &lt;named list&gt; Amy Roed… Can … \"Hayami Ko… http… https://w… 2024-05-31… \"Hayam…\n16 &lt;named list&gt; &lt;NA&gt;      Nudg… \"Banerjee,… http… &lt;NA&gt;       2024-06-24… \"Baner…"
  }
]